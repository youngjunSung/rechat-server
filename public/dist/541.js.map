{"version":3,"file":"541.js","mappings":"gwCAsEA,QA7Dc,WAGZ,IAAAA,GAAgCC,EAAAA,EAAAA,IAAO,aAAcC,EAAAA,EAAS,CAC5DC,iBAAkB,MADZC,EAAIJ,EAAJI,KAAaC,GAAFL,EAALM,MAAaN,EAANK,QAG8BE,EAAAC,GAAfC,EAAAA,EAAAA,WAAS,GAAM,GAA5CC,EAAUH,EAAA,GAAEI,EAAaJ,EAAA,GACqBK,EAAAJ,GAAZK,EAAAA,EAAAA,GAAS,IAAG,GAA9CC,EAAKF,EAAA,GAAYG,GAAFH,EAAA,GAAeA,EAAA,IACeI,EAAAR,GAApBK,EAAAA,EAAAA,GAAiB,IAAG,GAA7CI,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAEtBG,GAAmBC,EAAAA,EAAAA,cACvB,SAACC,GACCH,EAAYG,EAAEC,OAAOC,MACvB,GACA,CAACT,EAAOG,EAAUb,IAGdoB,GAAWJ,EAAAA,EAAAA,cACf,SAACC,GACCV,GAAc,GACdc,IAAAA,KAEI,mBACA,CAAEX,MAAAA,EAAOG,SAAAA,GACT,CACES,iBAAiB,IAGpBC,MAAK,WACJtB,GACF,IACCuB,OAAM,SAACtB,GAAU,IAAAuB,EAChBlB,EAAyC,OAAb,QAAdkB,EAAAvB,EAAMwB,gBAAQ,IAAAD,OAAA,EAAdA,EAAgBE,QAChC,GACJ,GACA,CAACjB,EAAOG,IAGV,OADAe,QAAQC,IAAI7B,GACRA,EAAa8B,EAAAA,cAACC,EAAAA,GAAQ,CAACC,GAAG,iCAG5BF,EAAAA,cAAA,OAAKG,UAAU,mCACbH,EAAAA,cAAA,MAAIG,UAAU,iEACZH,EAAAA,cAACI,EAAAA,GAAQ,CAACC,MAAM,YAChBL,EAAAA,cAAA,QAAMG,UAAU,gDAA+C,UAC/DH,EAAAA,cAAA,QAAMG,UAAU,SAAQ,UAE1BH,EAAAA,cAACM,EAAAA,GAAS,CAACC,MAAM,SAASC,KAAK,QAAQnB,MAAOT,EAAO6B,SAAU5B,IAC/DmB,EAAAA,cAACM,EAAAA,GAAS,CAACC,MAAM,OAAOC,KAAK,WAAWnB,MAAON,EAAU0B,SAAUxB,IAClET,GAAcwB,EAAAA,cAAA,KAAGG,UAAU,iDAAgD,UAC5EH,EAAAA,cAACU,EAAAA,GAAM,CAACC,KAAK,MAAMC,QAAStB,IAC5BU,EAAAA,cAAA,KAAGG,UAAU,yBAAwB,oBAEnCH,EAAAA,cAACa,EAAAA,GAAI,CAACX,GAAG,QAAQC,UAAU,2BAA0B,SAM7D,C","sources":["webpack://sleact-ts-front/./src/pages/Login.tsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\r\nimport { TextField, Button } from '@components';\r\nimport { Link, Navigate } from 'react-router-dom';\r\nimport { useInput } from '@hooks/useInput';\r\nimport { LogoChat } from '@assets/icons/';\r\nimport axios from 'axios';\r\nimport useSWR from 'swr';\r\nimport fetcher from '@utils/fetcher';\r\n\r\nconst Login = () => {\r\n  // useSWR은 get으로 요청한 데이터를 받아와서 저장한다.\r\n  // mutate : 내가 원할 때 SWR 호출하기\r\n  const { data, error, mutate } = useSWR('/api/users', fetcher, {\r\n    dedupingInterval: 5000, // 주기적으로 호출하지만, dedupingInterval 기간 내에는 캐시에서 불러온다\r\n  });\r\n  const [logInError, setLogInError] = useState(false);\r\n  const [email, setEmail, onChangeEmail] = useInput('');\r\n  const [password, setPassword] = useInput<string>('');\r\n\r\n  const onChangePassword = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setPassword(e.target.value);\r\n    },\r\n    [email, password, data],\r\n  );\r\n\r\n  const onSubmit = useCallback(\r\n    (e: React.MouseEvent<HTMLButtonElement>) => {\r\n      setLogInError(false);\r\n      axios\r\n        .post(\r\n          '/api/users/login',\r\n          { email, password },\r\n          {\r\n            withCredentials: true,\r\n          },\r\n        )\r\n        .then(() => {\r\n          mutate();\r\n        })\r\n        .catch((error) => {\r\n          setLogInError(error.response?.status === 401);\r\n        });\r\n    },\r\n    [email, password],\r\n  );\r\n  console.log(data);\r\n  if (data) return <Navigate to=\"/workspace/sleact/channel/일반\" />;\r\n\r\n  return (\r\n    <div className=\"max-w-[400px] mx-auto px-[20px]\">\r\n      <h1 className=\"flex flex-col items-center justify-center pt-[60px] pb-[20px]\">\r\n        <LogoChat color=\"#444791\" />\r\n        <span className=\"mt-[10px] text-primary text-[20px] font-bold\">ReChat</span>\r\n        <span className=\"blind\">Slack</span>\r\n      </h1>\r\n      <TextField label=\"이메일 주소\" type=\"email\" value={email} onChange={onChangeEmail} />\r\n      <TextField label=\"비밀번호\" type=\"password\" value={password} onChange={onChangePassword} />\r\n      {logInError && <p className=\"mb-[20px] mt-[-10px] text-red-500 font-normal\">로그인 실패</p>}\r\n      <Button text=\"로그인\" onClick={onSubmit} />\r\n      <p className=\"mt-[10px] text-center\">\r\n        Slack을 처음 사용하시나요?\r\n        <Link to=\"/sign\" className=\"ml-[4px] text-[#004174]\">\r\n          회원가입\r\n        </Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["_useSWR","useSWR","fetcher","dedupingInterval","data","mutate","error","_useState2","_slicedToArray","useState","logInError","setLogInError","_useInput2","useInput","email","onChangeEmail","_useInput4","password","setPassword","onChangePassword","useCallback","e","target","value","onSubmit","axios","withCredentials","then","catch","_error$response","response","status","console","log","React","Navigate","to","className","LogoChat","color","TextField","label","type","onChange","Button","text","onClick","Link"],"sourceRoot":""}