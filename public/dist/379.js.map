{"version":3,"file":"379.js","mappings":"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","sources":["webpack://sleact-ts-front/./src/assets/icons/LogoChat.tsx","webpack://sleact-ts-front/./src/assets/icons/Plus.tsx","webpack://sleact-ts-front/./src/assets/icons/TriangleDown.tsx","webpack://sleact-ts-front/./src/components/Button.tsx","webpack://sleact-ts-front/./src/components/TextField.tsx","webpack://sleact-ts-front/./src/components/ChatBox.tsx","webpack://sleact-ts-front/./src/components/ChatList.tsx","webpack://sleact-ts-front/./src/components/Chat.tsx","webpack://sleact-ts-front/./src/hooks/useInput.ts","webpack://sleact-ts-front/./src/utils/fetcher.ts"],"sourcesContent":["import React from 'react';\r\nimport { IconProps } from '@typings/types';\r\n\r\nconst defaultValue = {\r\n  width: 64,\r\n  height: 64,\r\n};\r\n\r\nexport const LogoChat: React.FC<IconProps> = ({\r\n  width = defaultValue.width,\r\n  height = defaultValue.height,\r\n  className,\r\n  color,\r\n}) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      id=\"Layer_1\"\r\n      x=\"0px\"\r\n      y=\"0px\"\r\n      width={width}\r\n      height={height}\r\n      className={className}\r\n      viewBox=\"0 0 64 64\"\r\n      enableBackground=\"new 0 0 64 64\"\r\n    >\r\n      <g transform={`scale(${width / defaultValue.width}, ${height / defaultValue.height})`}>\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          clipRule=\"evenodd\"\r\n          fill={color ?? '#288EF7'}\r\n          d=\"M42.824,58.226c-0.056,0.024-0.116,0.044-0.175,0.062  c-0.017,0.005-0.031,0.013-0.046,0.018l-0.002-0.003c-0.191,0.061-0.391,0.104-0.602,0.104c-1.105,0-2-0.896-2-2  c0-0.885,0.577-1.624,1.37-1.891l-0.013-0.036C52.213,50.901,60,41.307,60,30C60,15.642,47.465,4,32,4C16.536,4,4,15.642,4,30  c0,7.998,3.908,15.127,10.031,19.891c0.032,0.039,0.044,0.083,0.088,0.117C15.263,50.893,16,52.279,16,53.835v5.884l6.795-4.633  l0.008,0.01c0.334-0.252,0.746-0.407,1.197-0.407c1.105,0,2,0.895,2,2c0,0.764-0.434,1.421-1.064,1.755l-6.984,4.89  c-0.61,0.42-1.35,0.667-2.147,0.667C13.704,64,12,62.296,12,60.196v-6.788C4.686,47.913,0,39.472,0,30C0,13.431,14.327,0,32,0  s32,13.431,32,30C64,43.004,55.166,54.063,42.824,58.226L42.824,58.226z M14.43,37.161c-0.677-0.909-0.515-2.211,0.363-2.909  l12.312-9.82c0.878-0.701,2.139-0.531,2.816,0.376l6.129,8.211l10.725-8.553c0.878-0.701,2.139-0.534,2.817,0.373  c0.677,0.909,0.514,2.211-0.363,2.909l-12.315,9.82c-0.878,0.701-2.139,0.531-2.814-0.376l-6.131-8.211l-10.725,8.553  C16.366,38.235,15.105,38.068,14.43,37.161L14.43,37.161z M34,56c1.105,0,2,0.895,2,2s-0.895,2-2,2s-2-0.895-2-2S32.895,56,34,56  L34,56z\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { IconProps } from '@typings/types';\r\n\r\nconst defaultValue = {\r\n  width: 16,\r\n  height: 16,\r\n};\r\n\r\nexport const Plus: React.FC<IconProps> = ({\r\n  width = defaultValue.width,\r\n  height = defaultValue.height,\r\n  className,\r\n  color,\r\n}) => {\r\n  return (\r\n    <svg width={width} height={height} className={className} fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <g transform={`scale(${width / defaultValue.width}, ${height / defaultValue.height})`}>\r\n        <rect x=\"2\" y=\"7\" width=\"12\" height=\"2\" rx=\"1\" fill={color ?? '#000'} />\r\n        <rect x=\"7\" y=\"14\" width=\"12\" height=\"2\" rx=\"1\" transform=\"rotate(-90 7 14)\" fill={color ?? '#000'} />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { IconProps } from '@typings/types';\r\n\r\nconst defaultValue = {\r\n  width: 8,\r\n  height: 7,\r\n};\r\n\r\nexport const TriangleDown: React.FC<IconProps> = ({\r\n  width = defaultValue.width,\r\n  height = defaultValue.height,\r\n  className,\r\n  color,\r\n}) => {\r\n  return (\r\n    <svg width={width} height={height} className={className} fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <g transform={`scale(${width / defaultValue.width}, ${height / defaultValue.height})`}>\r\n        <path\r\n          d=\"M4.822 5.98a1 1 0 0 1-1.644 0L.758 2.486a1 1 0 0 1 .821-1.57h4.842a1 1 0 0 1 .822 1.57L4.822 5.98Z\"\r\n          fill={color ?? '#7A8699'}\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\ninterface ButtonProps {\r\n  className?: string;\r\n  text: string;\r\n  onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nexport const Button: React.FC<ButtonProps> = ({ className, text, onClick }) => {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      onClick={onClick}\r\n      className={`flex items-center justify-center min-h-[54px] px-[10px] w-full bg-primary text-white rounded-[8px] text-[16px] font-bold ${className}`}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n","import React, { memo } from 'react';\r\n\r\ninterface TextFieldProps {\r\n  id?: string;\r\n  label?: string;\r\n  type?: React.HTMLInputTypeAttribute;\r\n  className?: string;\r\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  value?: string | number | readonly string[] | undefined;\r\n}\r\n\r\nexport const TextField: React.FC<TextFieldProps> = memo(({ id, label, type = 'text', className, onChange, value }) => {\r\n  // console.log(`${label} 렌더링!`);\r\n  return (\r\n    <div className={`flex flex-col [&:not(&:last-child)]:mb-[20px] ${className}`}>\r\n      <label htmlFor={id} className=\"mb-[4px] text-primary text-[14px] font-[500]\">\r\n        {label}\r\n      </label>\r\n      <input\r\n        type={type}\r\n        id={id}\r\n        className=\"py-[10px] border-b-[2px] border-primary border-solid rounded-none focus:outline-none\"\r\n        onChange={onChange}\r\n        value={value}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n","import React, { useRef, useEffect, useCallback } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport autosize from 'autosize';\r\nimport gravatar from 'gravatar';\r\nimport { Mention, MentionsInput, MentionsInputClass, SuggestionDataItem } from 'react-mentions';\r\nimport fetcher from '@utils/fetcher';\r\nimport useSWR from 'swr';\r\nimport { IUser, IDM } from '@typings/db';\r\n\r\ninterface ChatBoxProps {\r\n  chat: string;\r\n  onSubmit: (e: any) => void;\r\n  onChangeChat: (e: any) => void;\r\n  placeholder?: string;\r\n}\r\n\r\nexport const ChatBox = ({ chat, onSubmit, onChangeChat, placeholder }: ChatBoxProps) => {\r\n  const params = useParams();\r\n  const refTextarea = useRef<HTMLTextAreaElement>(null);\r\n  const {\r\n    data: workspaceMembers,\r\n    error: error4,\r\n    mutate: mutate4,\r\n  } = useSWR<IUser[] | undefined>(`/api/workspaces/${params.workspace}/members`, fetcher);\r\n  const onKeyDownChat = (e: React.KeyboardEvent) => {\r\n    // console.log(e);\r\n    if (e.key === 'Enter' && e.shiftKey === false && chat.trim()) {\r\n      // console.log(e);\r\n      onSubmit(e);\r\n    }\r\n  };\r\n  const renderSuggestion = useCallback(\r\n    (\r\n      suggestion: SuggestionDataItem,\r\n      search: string,\r\n      highlightedDisplay: React.ReactNode,\r\n      index: number,\r\n      focused: boolean,\r\n    ): React.ReactNode => {\r\n      if (!workspaceMembers) return;\r\n      return (\r\n        <button type=\"button\" className={`w-full flex ${focused ? `bg-gray-400` : `white`}`}>\r\n          <img src={gravatar.url(workspaceMembers[index].email, { s: '24px', d: 'retro' })} alt=\"\" />\r\n          <span>{highlightedDisplay}</span>\r\n        </button>\r\n      );\r\n    },\r\n    [],\r\n  );\r\n  useEffect(() => {\r\n    if (refTextarea.current) {\r\n      autosize(refTextarea.current);\r\n    }\r\n  }, []);\r\n  return (\r\n    <div className=\"px-[20px] pb-[20px]\">\r\n      <MentionsInput\r\n        rows={1} // autosize 플러그인 사용 시 기본 높이 제어 속성\r\n        inputRef={refTextarea}\r\n        value={chat}\r\n        onChange={onChangeChat}\r\n        onKeyDown={onKeyDownChat}\r\n        placeholder={placeholder}\r\n        allowSuggestionsAboveCursor\r\n        className=\"resize-none [&_textarea]:!p-[10px] p-[10px] border-[1px] border-gray-300 border-solid w-full rounded-[8px]\"\r\n      >\r\n        <Mention\r\n          appendSpaceOnAdd\r\n          trigger=\"@\"\r\n          data={workspaceMembers?.map((v) => ({ id: v.id, display: v.nickname })) || []}\r\n          renderSuggestion={renderSuggestion}\r\n        />\r\n      </MentionsInput>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useRef, useCallback, useMemo, forwardRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IUser, IChat, IDM } from '@typings/db';\r\nimport gravatar from 'gravatar';\r\nimport dayjs from 'dayjs';\r\nimport { Scrollbars, positionValues } from 'react-custom-scrollbars';\r\nimport regexifyString from 'regexify-string';\r\nimport { Chat } from '@components';\r\n\r\ninterface ChatListProps {\r\n  chatData: { [key: string]: (IDM | IChat)[] };\r\n  setScrollValues: React.Dispatch<React.SetStateAction<positionValues | undefined>>;\r\n  setSize: (size: number | ((_size: number) => number)) => Promise<(IDM[] | IChat[])[] | undefined>;\r\n  isEmpty: boolean;\r\n  isReachingEnd: boolean;\r\n}\r\n\r\nexport const ChatList = forwardRef(\r\n  ({ chatData, setScrollValues, setSize, isEmpty, isReachingEnd }: ChatListProps, ref: React.LegacyRef<Scrollbars>) => {\r\n    const refScrollbars = useRef<Scrollbars>(null);\r\n    // const result = regexifyString({\r\n    //   input: chatData?.content,\r\n    //   pattern: /@\\[(.+?)]\\((\\d+?)\\)|\\n/g,\r\n    //   decorator(match, index) {\r\n    //     const arr: string[] | null = match.match(/@\\[(.+?)]\\((\\d+?)\\)/)!;\r\n    //     if (arr) {\r\n    //       return (\r\n    //         <Link key={match + index} to={`/workspace/${workspace}/dm/${arr[2]}`}>\r\n    //           @{arr[1]}\r\n    //         </Link>\r\n    //       );\r\n    //     }\r\n    //     return <br key={index} />;\r\n    //   },\r\n    // });\r\n    const handleScroll = useCallback(\r\n      (values: positionValues) => {\r\n        // setScrollValues(values);\r\n        if (values.scrollTop === 0 && !isReachingEnd) {\r\n          setSize((prevSize) => prevSize + 1).then(() => {\r\n            const current = (refScrollbars as React.MutableRefObject<Scrollbars>)?.current;\r\n            if (current) {\r\n              current.scrollTop(current.getScrollHeight() - values.scrollHeight);\r\n            }\r\n          });\r\n        }\r\n        console.log(values);\r\n      },\r\n      [refScrollbars, isReachingEnd, setSize],\r\n    );\r\n    return (\r\n      <Scrollbars ref={ref} onScrollFrame={handleScroll} autoHide>\r\n        <div className=\"flex flex-col flex-1 py-[16px] px-[20px]\">\r\n          {Object.entries(chatData).map(([date, chats]) => {\r\n            return (\r\n              <div key={date}>\r\n                <div className=\"center sticky top-[6px]\">\r\n                  <p className=\"px-[10px] py-[4px] border-[#eee] border-[1px] rounded-full text-[#777] text-[12px]\">\r\n                    {date}\r\n                  </p>\r\n                </div>\r\n                {chats.map((chat: any, idx: number) => {\r\n                  return <Chat key={chat.id} chat={chat} />;\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </Scrollbars>\r\n    );\r\n  },\r\n);\r\n","import React, { useRef, useCallback, useMemo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IUser, IChat, IDM } from '@typings/db';\r\nimport gravatar from 'gravatar';\r\nimport dayjs from 'dayjs';\r\nimport Scrollbars from 'react-custom-scrollbars';\r\nimport regexifyString from 'regexify-string';\r\n\r\nexport const Chat = ({ chat }: { chat: IChat | IDM }) => {\r\n  const user = 'Sender' in chat ? chat.Sender : chat.User;\r\n  return (\r\n    <div className=\"flex items-start\">\r\n      <button type=\"button\" className=\"mt-[4px] flex items-center justify-center rounded-[4px] overflow-hidden\">\r\n        <img src={gravatar.url(user.email, { s: '24px', d: 'retro' })} alt=\"\" />\r\n      </button>\r\n      <div className=\"ml-[6px]\">\r\n        <div className=\"flex items-center mb-[4px]\">\r\n          <p className=\"text-[16px] text-black font-[600] mr-[4px]\">{user.nickname}</p>\r\n          <p className=\"text-[12px] text-gray-500 font-[400]\">{dayjs(chat.createdAt).format('h:mm A')}</p>\r\n        </div>\r\n        <p>{chat.content}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Dispatch, SetStateAction, useState, useCallback } from 'react';\r\n\r\ntype ReturnTypes<T> = [T, Dispatch<SetStateAction<T>>, (e: React.ChangeEvent<HTMLInputElement>) => void];\r\n\r\nexport const useInput = <T>(initialData: T): ReturnTypes<T> => {\r\n  const [state, setState] = useState(initialData);\r\n  const handler = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setState(e.target.value as unknown as T);\r\n    },\r\n    [state],\r\n  );\r\n  return [state, setState, handler];\r\n};\r\n","import axios from 'axios';\r\n\r\nconst fetcher = (url: string) =>\r\n  axios\r\n    .get(url, {\r\n      // 프론트 서버와 백엔드 서버의 도메인이 다를 경우에도 백엔드에서 생성한 쿠키를 프론트로 주고 받게 할 수 있는 옵션\r\n      withCredentials: true,\r\n    })\r\n    .then((response) => response.data);\r\n\r\nexport default fetcher;\r\n"],"names":["LogoChat","_ref","_ref$width","width","_ref$height","height","className","color","React","xmlns","version","id","x","y","viewBox","enableBackground","transform","concat","fillRule","clipRule","fill","d","Plus","rx","TriangleDown","Button","text","onClick","type","TextField","memo","label","_ref$type","onChange","value","htmlFor","ChatBox","chat","onSubmit","onChangeChat","placeholder","params","useParams","refTextarea","useRef","_useSWR","useSWR","workspace","fetcher","workspaceMembers","data","renderSuggestion","error","mutate","useCallback","suggestion","search","highlightedDisplay","index","focused","src","gravatar","email","s","alt","useEffect","current","autosize","MentionsInput","rows","inputRef","onKeyDown","e","key","shiftKey","trim","allowSuggestionsAboveCursor","Mention","appendSpaceOnAdd","trigger","map","v","display","nickname","ChatList","forwardRef","ref","chatData","setSize","setScrollValues","isReachingEnd","isEmpty","refScrollbars","handleScroll","values","scrollTop","prevSize","then","getScrollHeight","scrollHeight","console","log","Scrollbars","onScrollFrame","autoHide","Object","entries","_ref2","_ref3","date","chats","idx","Chat","user","Sender","User","dayjs","createdAt","format","content","useInput","initialData","_useState2","useState","state","setState","handler","target","url","axios","withCredentials","response"],"sourceRoot":""}