{"version":3,"file":"928.js","mappings":"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","sources":["webpack://sleact-ts-front/./src/hooks/useSocket.ts","webpack://sleact-ts-front/./src/layouts/WorkSpace.tsx"],"sourcesContent":["import io from 'socket.io-client';\r\nimport { useCallback } from 'react';\r\n\r\nconst backUrl = 'http://localhost:3095';\r\n\r\nconst sockets: { [key: string]: SocketIOClient.Socket } = {};\r\nconst useSocket = (workspace?: string): [SocketIOClient.Socket | undefined, () => void] => {\r\n  const disconnect = useCallback(() => {\r\n    if (workspace) {\r\n      sockets[workspace].disconnect();\r\n      delete sockets[workspace];\r\n    }\r\n  }, [workspace]);\r\n  if (!workspace) {\r\n    return [undefined, disconnect];\r\n  }\r\n  if (!sockets[workspace]) {\r\n    sockets[workspace] = io.connect(`${backUrl}/ws-${workspace}`, {\r\n      transports: ['websocket'],\r\n    });\r\n  }\r\n  return [sockets[workspace], disconnect];\r\n};\r\n\r\nexport default useSocket;\r\n","import React, { useState, useCallback, useEffect, ReactNode } from 'react';\r\nimport { useLocation, Navigate, Link, NavLink, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport useSWR from 'swr';\r\nimport fetcher from '@utils/fetcher';\r\nimport { Outlet } from 'react-router-dom';\r\nimport * as Icon from '@assets/icons';\r\nimport gravatar from 'gravatar';\r\nimport { Menu, MenuItem, Popover, Divider, Dialog, DialogActions, DialogContent, DialogTitle } from '@mui/material';\r\nimport { TextField, Button } from '@components';\r\nimport { useInput } from '@hooks/useInput';\r\nimport useSocket from '@hooks/useSocket';\r\nimport { IUser, IWorkspace } from '@typings/db';\r\nimport { KeyboardArrowDown, Logout } from '@mui/icons-material';\r\n\r\nconst WorkSpace = () => {\r\n  const params = useParams();\r\n  const [socket, disconnet] = useSocket(params.workspace);\r\n  const { data: myLoginData, error, mutate } = useSWR<IUser | false>('/api/users', fetcher);\r\n  const { data: myWorkspaces, error: error2, mutate: mutate2 } = useSWR<IWorkspace[]>('/api/workspaces', fetcher);\r\n  const {\r\n    data: channelData,\r\n    error: error3,\r\n    mutate: mutate3,\r\n  } = useSWR<IWorkspace[]>(`/api/workspaces/${params.workspace}/channels`, fetcher);\r\n  const {\r\n    data: workspaceMembers,\r\n    error: error4,\r\n    mutate: mutate4,\r\n  } = useSWR<IUser[] | undefined>(`/api/workspaces/${params.workspace}/members`, fetcher);\r\n  const {\r\n    data: channelMembers,\r\n    error: error5,\r\n    mutate: mutate6,\r\n  } = useSWR<IUser[] | undefined>(\r\n    params.channel ? `/api/workspaces/${params.workspace}/channels/${params.channel}/members` : null,\r\n    fetcher,\r\n  );\r\n  const [newWorkspaceMember, setNewWorkspaceMember, onChangeNewWorkspaceMember] = useInput('');\r\n  const [newChannelMember, setNewChannelMember, onChangeNewChannelMember] = useInput('');\r\n  const [channelName, setChannelName, onChangeChannelName] = useInput('');\r\n  const [wsName, setWsName, onChangeWsName] = useInput('');\r\n  const [wsUrl, setWsUrl, onChangeWsUrl] = useInput('');\r\n  const [onLineList, setOnLineList] = useState<number[]>([]);\r\n\r\n  const [anchorElProfile, setAnchorElProfile] = useState<null | HTMLElement>(null);\r\n  const openMenuProfile = Boolean(anchorElProfile);\r\n\r\n  const handleMemuProfileClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorElProfile(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuProfileClose = () => {\r\n    setAnchorElProfile(null);\r\n  };\r\n\r\n  const [anchorElWorkspace, setAnchorElWorkspace] = useState<null | HTMLElement>(null);\r\n  const openMenuWorkspace = Boolean(anchorElWorkspace);\r\n\r\n  const handleMemuWorkspaceClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorElWorkspace(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuWorkspaceClose = () => {\r\n    setAnchorElWorkspace(null);\r\n  };\r\n\r\n  const [openDialogNewWorkspace, setOpenDialogNewWorkspace] = useState(false);\r\n\r\n  const handleDialogNewWorkspaceOpen = () => {\r\n    setOpenDialogNewWorkspace(true);\r\n  };\r\n\r\n  const handleDialogNewWorkspaceClose = () => {\r\n    setOpenDialogNewWorkspace(false);\r\n  };\r\n\r\n  const [openDialogInviteWorkspace, setOpenDialogInviteWorkspace] = useState(false);\r\n\r\n  const handleDialogInviteWorkspaceOpen = () => {\r\n    setOpenDialogInviteWorkspace(true);\r\n  };\r\n\r\n  const handleDialogInviteWorkspaceClose = () => {\r\n    setOpenDialogInviteWorkspace(false);\r\n  };\r\n\r\n  const [openDialogNewChannel, setOpenDialogNewChannel] = useState(false);\r\n\r\n  const handleDialogNewChannelOpen = () => {\r\n    setOpenDialogNewChannel(true);\r\n  };\r\n\r\n  const handleDialogNewChannelClose = () => {\r\n    setOpenDialogNewChannel(false);\r\n  };\r\n\r\n  const handleCreateWorkspace = useCallback(() => {\r\n    if (!wsName || !wsName.trim()) return;\r\n    if (!wsUrl || !wsUrl.trim()) return;\r\n    axios\r\n      .post(\r\n        '/api/workspaces',\r\n        { workspace: wsName, url: wsUrl },\r\n        {\r\n          withCredentials: true,\r\n        },\r\n      )\r\n      .then(() => {\r\n        mutate();\r\n        handleDialogNewWorkspaceClose();\r\n        setWsName('');\r\n        setWsUrl('');\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [wsName, wsUrl]);\r\n\r\n  const handleInviteWorkspace = useCallback(() => {\r\n    if (!newWorkspaceMember || !newWorkspaceMember.trim()) return;\r\n    axios\r\n      .post(\r\n        `/api/workspaces/${params.workspace}/members`,\r\n        { email: newWorkspaceMember },\r\n        {\r\n          withCredentials: true,\r\n        },\r\n      )\r\n      .then(() => {\r\n        mutate4();\r\n        handleMenuWorkspaceClose();\r\n        handleDialogInviteWorkspaceClose();\r\n        setNewWorkspaceMember('');\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [newWorkspaceMember]);\r\n\r\n  const handleCreateChannel = useCallback(() => {\r\n    if (!channelName || !channelName.trim()) return;\r\n    axios\r\n      .post(\r\n        `/api/workspaces/${params.workspace}/channels`,\r\n        { name: channelName },\r\n        {\r\n          withCredentials: true,\r\n        },\r\n      )\r\n      .then(() => {\r\n        mutate3();\r\n        handleMenuWorkspaceClose();\r\n        handleDialogNewChannelClose();\r\n        setChannelName('');\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [channelName]);\r\n\r\n  const handleLogout = useCallback((e: React.MouseEvent<HTMLElement>) => {\r\n    axios\r\n      .post('/api/users/logout', null, {\r\n        withCredentials: true,\r\n      })\r\n      .then(() => {\r\n        mutate();\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (channelData && myLoginData && socket) {\r\n      socket.emit('login', { id: myLoginData.id, channels: channelData });\r\n    }\r\n  }, [channelData, myLoginData, socket]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      disconnet();\r\n    };\r\n  }, [params.workspace, disconnet]);\r\n\r\n  useEffect(() => {\r\n    socket?.on('onlineList', (data: number[]) => {\r\n      setOnLineList(data);\r\n    });\r\n    return () => {\r\n      socket?.off('onLineList');\r\n    };\r\n  }, [socket]);\r\n\r\n  console.log(socket);\r\n  // console.log(onLineList);\r\n  // console.log(myLoginData);\r\n  // console.log(myWorkspaces);\r\n  // console.log(workspaceMembers);\r\n  // console.log(channelData);\r\n  // console.log(channelMembers);\r\n\r\n  if (!myLoginData) return <Navigate to=\"/\" />;\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-full bg-primary\">\r\n      <header className=\"flex items-center min-h-[50px] py-[6px] px-[15px]\">\r\n        <button type=\"button\" onClick={handleLogout} className=\"ml-auto center p-[6px]\">\r\n          <Logout className=\"text-white\" />\r\n        </button>\r\n      </header>\r\n      <main className=\"flex flex-1 min-h-0\">\r\n        <div className=\"flex flex-col shrink-0 items-center py-[14px] px-[6px] w-[70px]\">\r\n          {myLoginData.Workspaces.map((ws) => {\r\n            return (\r\n              <Link\r\n                key={ws.id}\r\n                to={`/workspace/${ws.name}/channel/일반`}\r\n                type=\"button\"\r\n                className=\"flex justify-center items-center rounded-[6px] bg-[#ababad] text-black text-[20px] font-bold w-[36px] h-[36px] [&:not(:last-child)]:mb-[20px]\"\r\n              >\r\n                {ws.name.slice(0, 1).toUpperCase()}\r\n              </Link>\r\n            );\r\n          })}\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleDialogNewWorkspaceOpen}\r\n            className=\"flex justify-center items-center rounded-[6px] text-black text-[20px] font-bold w-[36px] h-[36px] [&:not(:last-child)]:mb-[20px]\"\r\n          >\r\n            <Icon.Plus width={20} height={20} color=\"#fff\" />\r\n          </button>\r\n          <Dialog\r\n            open={openDialogNewWorkspace}\r\n            onClose={handleDialogNewWorkspaceClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n              <span className=\"text-[18px] text-primary font-bold\">워크스페이스 생성</span>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <TextField label=\"워크스페이스 이름\" type=\"email\" value={wsName} onChange={onChangeWsName} />\r\n              <TextField label=\"워크스페이스 URL\" value={wsUrl} onChange={onChangeWsUrl} />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button text=\"생성하기\" onClick={handleCreateWorkspace} />\r\n            </DialogActions>\r\n          </Dialog>\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleMemuProfileClick}\r\n            className=\"flex items-center justify-center mt-auto rounded-[4px] overflow-hidden\"\r\n          >\r\n            <img src={gravatar.url(myLoginData.email, { s: '36px', d: 'retro' })} alt=\"\" />\r\n          </button>\r\n          <Menu\r\n            anchorEl={anchorElProfile}\r\n            open={openMenuProfile}\r\n            onClose={handleMenuProfileClose}\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'right',\r\n            }}\r\n            transformOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: -10,\r\n            }}\r\n            sx={{\r\n              '& .MuiPaper-root': {\r\n                width: 300,\r\n              },\r\n            }}\r\n          >\r\n            <MenuItem>\r\n              <img src={gravatar.url(myLoginData.email, { s: '36px', d: 'retro' })} alt=\"\" className=\"rounded-[4px]\" />\r\n              <div className=\"pl-[10px]\">\r\n                <p>{myLoginData.nickname}</p>\r\n                <p>Active</p>\r\n              </div>\r\n            </MenuItem>\r\n            <Divider />\r\n            <MenuItem>Profile</MenuItem>\r\n            <MenuItem>Setting</MenuItem>\r\n            <Divider />\r\n            <MenuItem onClick={handleLogout}>\r\n              <p>Logout</p>\r\n            </MenuItem>\r\n          </Menu>\r\n        </div>\r\n        <article className=\"flex flex-1 mb-[5px] mr-[5px] rounded-[8px] overflow-hidden\">\r\n          <div className=\"flex flex-col bg-[#f9edff1c] w-[320px]\">\r\n            <div className=\"py-[16px] px-[20px]\">\r\n              <button type=\"button\" onClick={handleMemuWorkspaceClick} className=\"text-[18px] font-bold text-white\">\r\n                Work Space <KeyboardArrowDown />\r\n              </button>\r\n              <Menu\r\n                anchorEl={anchorElWorkspace}\r\n                open={openMenuWorkspace}\r\n                onClose={handleMenuWorkspaceClose}\r\n                anchorOrigin={{\r\n                  vertical: 'bottom',\r\n                  horizontal: 'left',\r\n                }}\r\n                transformOrigin={{\r\n                  vertical: -10,\r\n                  horizontal: 'left',\r\n                }}\r\n                sx={{\r\n                  '& .MuiPaper-root': {\r\n                    width: 280,\r\n                  },\r\n                }}\r\n              >\r\n                <MenuItem>Sleact</MenuItem>\r\n                <MenuItem onClick={handleDialogInviteWorkspaceOpen}>워크스페이스에 사용자 초대하기</MenuItem>\r\n                <Dialog\r\n                  open={openDialogInviteWorkspace}\r\n                  onClose={handleDialogInviteWorkspaceClose}\r\n                  aria-labelledby=\"alert-dialog-title\"\r\n                  aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                  <DialogTitle id=\"alert-dialog-title\">\r\n                    <span className=\"text-[18px] text-primary font-bold\">사용자 초대</span>\r\n                  </DialogTitle>\r\n                  <DialogContent>\r\n                    <TextField\r\n                      label=\"이메일\"\r\n                      type=\"email\"\r\n                      value={newWorkspaceMember}\r\n                      onChange={onChangeNewWorkspaceMember}\r\n                    />\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button text=\"초대하기\" onClick={handleInviteWorkspace} />\r\n                  </DialogActions>\r\n                </Dialog>\r\n                <MenuItem onClick={handleDialogNewChannelOpen}>채널 만들기</MenuItem>\r\n                <Dialog\r\n                  open={openDialogNewChannel}\r\n                  onClose={handleDialogNewChannelClose}\r\n                  aria-labelledby=\"alert-dialog-title\"\r\n                  aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                  <DialogTitle id=\"alert-dialog-title\">\r\n                    <span className=\"text-[18px] text-primary font-bold\">채널 생성</span>\r\n                  </DialogTitle>\r\n                  <DialogContent>\r\n                    <TextField\r\n                      label=\"워크스페이스 이름\"\r\n                      type=\"text\"\r\n                      value={channelName}\r\n                      onChange={onChangeChannelName}\r\n                    />\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button text=\"생성하기\" onClick={handleCreateChannel} />\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </Menu>\r\n            </div>\r\n            <div className=\"flex-1 overflow-auto pb-[16px] px-[20px]\">\r\n              <details className=\"group\" open>\r\n                <summary className=\"flex items-center cursor-pointer py-[6px] text-[14px] text-white font-normal pl-[6px]\">\r\n                  <Icon.TriangleDown\r\n                    width={10}\r\n                    height={10}\r\n                    color=\"#fff\"\r\n                    className=\"mr-[8px] rotate-[-90deg] group-open:rotate-[0deg] transition-all\"\r\n                  />{' '}\r\n                  Channels\r\n                </summary>\r\n                <div className=\"flex flex-col ml-[26px]\">\r\n                  {channelData?.map((e, idx) => {\r\n                    return (\r\n                      <NavLink\r\n                        key={e.id}\r\n                        to={`channel/${e.name}`}\r\n                        className={({ isActive }: { isActive: boolean }): string | undefined =>\r\n                          isActive\r\n                            ? 'py-[4px] text-[14px] text-white text-left font-bold underline'\r\n                            : 'py-[4px] text-[14px] text-white text-left font-normal'\r\n                        }\r\n                      >\r\n                        # {e.name}\r\n                      </NavLink>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </details>\r\n              <details className=\"group\" open>\r\n                <summary className=\"flex items-center cursor-pointer py-[6px] text-[14px] text-white font-normal pl-[6px]\">\r\n                  <Icon.TriangleDown\r\n                    width={10}\r\n                    height={10}\r\n                    color=\"#fff\"\r\n                    className=\"mr-[8px] rotate-[-90deg] group-open:rotate-[0deg] transition-all\"\r\n                  />{' '}\r\n                  Direct Messages\r\n                </summary>\r\n                <div className=\"flex flex-col ml-[26px]\">\r\n                  {workspaceMembers?.map((member, idx) => {\r\n                    return (\r\n                      <Link\r\n                        key={member.id}\r\n                        to={`dm/${member.id}`}\r\n                        className={`flex items-center py-[4px] text-[14px] text-white font-normal text-left`}\r\n                      >\r\n                        <span\r\n                          className={`w-[8px] h-[8px] mr-[4px] rounded-full border border-white ${\r\n                            onLineList.includes(member.id) && `bg-[#69ff37] border-none`\r\n                          }`}\r\n                        ></span>\r\n                        {member.nickname}\r\n                      </Link>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </details>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex flex-col flex-1 overflow-auto bg-white\">\r\n            <Outlet />\r\n          </div>\r\n        </article>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkSpace;\r\n"],"names":["sockets","workspace","disconnect","useCallback","io","concat","transports","undefined","params","useParams","_useSocket2","_slicedToArray","useSocket","socket","disconnet","_useSWR","useSWR","fetcher","myLoginData","data","mutate","error","_useSWR2","_useSWR3","channelData","mutate3","_useSWR4","workspaceMembers","mutate4","_useSWR5","channel","_useInput2","useInput","newWorkspaceMember","setNewWorkspaceMember","onChangeNewWorkspaceMember","_useInput4","_useInput6","channelName","setChannelName","onChangeChannelName","_useInput8","wsName","setWsName","onChangeWsName","_useInput10","wsUrl","setWsUrl","onChangeWsUrl","_useState2","useState","onLineList","setOnLineList","_useState4","anchorElProfile","setAnchorElProfile","openMenuProfile","Boolean","_useState6","anchorElWorkspace","setAnchorElWorkspace","openMenuWorkspace","handleMenuWorkspaceClose","_useState8","openDialogNewWorkspace","setOpenDialogNewWorkspace","handleDialogNewWorkspaceClose","_useState10","openDialogInviteWorkspace","setOpenDialogInviteWorkspace","handleDialogInviteWorkspaceClose","_useState12","openDialogNewChannel","setOpenDialogNewChannel","handleDialogNewChannelClose","handleCreateWorkspace","trim","axios","url","withCredentials","then","catch","console","log","handleInviteWorkspace","email","handleCreateChannel","name","handleLogout","e","useEffect","emit","id","channels","on","off","React","className","type","onClick","Logout","Workspaces","map","ws","Link","key","to","slice","toUpperCase","Icon","width","height","color","Dialog","open","onClose","DialogTitle","DialogContent","TextField","label","value","onChange","DialogActions","Button","text","event","currentTarget","src","gravatar","s","d","alt","Menu","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","sx","MenuItem","nickname","Divider","KeyboardArrowDown","idx","NavLink","_ref","isActive","member","includes","Outlet","Navigate"],"sourceRoot":""}