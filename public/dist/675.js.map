{"version":3,"file":"675.js","mappings":"gwCAwFA,QA/Ea,WACX,IAAAA,GAAgCC,EAAAA,EAAAA,IAAO,aAAcC,EAAAA,GAA7CC,EAAIH,EAAJG,KAC6CC,GADlCJ,EAALK,MAAaL,EAANM,OACgCC,GAAZC,EAAAA,EAAAA,GAAS,IAAG,IAA9CC,EAAKL,EAAA,GAAYM,GAAFN,EAAA,GAAeA,EAAA,IACiCO,EAAAJ,GAApBC,EAAAA,EAAAA,GAAiB,IAAG,GAA/DI,EAAQD,EAAA,GAAeE,GAAFF,EAAA,GAAkBA,EAAA,IACMG,EAAAP,GAApBC,EAAAA,EAAAA,GAAiB,IAAG,GAA7CO,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GACkCG,EAAAV,GAApBC,EAAAA,EAAAA,GAAiB,IAAG,GAAvDU,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACqBG,EAAAb,GAAfC,EAAAA,EAAAA,IAAS,GAAM,GAApDa,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACUG,EAAAhB,GAAZiB,EAAAA,EAAAA,UAAS,IAAG,GAA3CC,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GACuBI,EAAApB,GAAfiB,EAAAA,EAAAA,WAAS,GAAM,GAAlDI,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAEhCG,GAAmBC,EAAAA,EAAAA,cACvB,SAACC,GACChB,EAAYgB,EAAEC,OAAOC,OACrBZ,EAAkBU,EAAEC,OAAOC,QAAUhB,EACvC,GACA,CAACH,EAAUG,IAGPiB,GAAwBJ,EAAAA,EAAAA,cAC5B,SAACC,GACCb,EAAiBa,EAAEC,OAAOC,OAC1BZ,EAAkBU,EAAEC,OAAOC,QAAUnB,EACvC,GACA,CAACA,EAAUG,IAGPkB,GAAWL,EAAAA,EAAAA,cACf,SAACC,IACMX,GAAkBT,IACrByB,QAAQC,IAAI,WACZZ,EAAe,IACfG,GAAiB,GAEjBU,IAAAA,KACQ,aAAc,CAClB9B,MAAAA,EACAG,SAAAA,EACAG,SAAAA,IAEDyB,MAAK,WACJX,GAAiB,EACnB,IACCY,OAAM,SAACpC,GACNgC,QAAQC,IAAIjC,EAAMqC,UAClBhB,EAAerB,EAAMqC,SAASvC,KAChC,IACCwC,SAAQ,WAAO,IAEtB,GACA,CAAClC,EAAOG,EAAUG,EAAUG,EAAeG,IAG7C,OAAIlB,EAAayC,EAAAA,cAACC,EAAAA,GAAQ,CAACC,GAAG,iCAG5BF,EAAAA,cAAA,OAAKG,UAAU,mCACbH,EAAAA,cAAA,MAAIG,UAAU,iEACZH,EAAAA,cAACI,EAAAA,GAAQ,CAACC,MAAM,YAChBL,EAAAA,cAAA,QAAMG,UAAU,gDAA+C,UAC/DH,EAAAA,cAAA,QAAMG,UAAU,SAAQ,UAE1BH,EAAAA,cAACM,EAAAA,GAAS,CAACC,MAAM,SAASC,KAAK,QAAQlB,MAAOzB,EAAO4C,SAAU3C,IAC/DkC,EAAAA,cAACM,EAAAA,GAAS,CAACC,MAAM,MAAMjB,MAAOtB,EAAUyC,SAAUxC,IAClD+B,EAAAA,cAACM,EAAAA,GAAS,CAACC,MAAM,OAAOC,KAAK,WAAWlB,MAAOnB,EAAUsC,SAAUvB,IACnEc,EAAAA,cAACM,EAAAA,GAAS,CAACC,MAAM,UAAUC,KAAK,WAAWlB,MAAOhB,EAAemC,SAAUlB,IAC1Ed,GAAkBuB,EAAAA,cAAA,KAAGG,UAAU,iDAAgD,oBAC/EtB,GAAemB,EAAAA,cAAA,KAAGG,UAAU,iDAAiDtB,GAC7EG,GAAiBgB,EAAAA,cAAA,KAAGG,UAAU,kDAAiD,YAChFH,EAAAA,cAACU,EAAAA,GAAM,CAACC,KAAK,OAAOC,QAASpB,IAC7BQ,EAAAA,cAAA,KAAGG,UAAU,yBAAwB,gBAEnCH,EAAAA,cAACa,EAAAA,GAAI,CAACX,GAAG,SAASC,UAAU,0BAAyB,QAM7D,C","sources":["webpack://sleact-ts-front/./src/pages/Sign.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { TextField, Button } from '@components';\r\nimport { Link, Navigate } from 'react-router-dom';\r\nimport { useInput } from '@hooks/useInput';\r\nimport { LogoChat } from '@assets/icons/';\r\nimport axios from 'axios';\r\nimport useSWR from 'swr';\r\nimport fetcher from '@utils/fetcher';\r\n\r\nconst Sign = () => {\r\n  const { data, error, mutate } = useSWR('/api/users', fetcher);\r\n  const [email, setEmail, onChangeEmail] = useInput('');\r\n  const [nickname, setNickname, onChangeNickname] = useInput<string>('');\r\n  const [password, setPassword] = useInput<string>('');\r\n  const [passwordCheck, setPasswordCheck] = useInput<string>('');\r\n  const [missmatchError, setMissmatchError] = useInput(false);\r\n  const [signUpError, setSignUpError] = useState('');\r\n  const [signUpSuccess, setSignUpSuccess] = useState(false);\r\n\r\n  const onChangePassword = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setPassword(e.target.value);\r\n      setMissmatchError(e.target.value !== passwordCheck);\r\n    },\r\n    [password, passwordCheck],\r\n  );\r\n\r\n  const onChangePasswordCheck = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setPasswordCheck(e.target.value);\r\n      setMissmatchError(e.target.value !== password);\r\n    },\r\n    [password, passwordCheck],\r\n  );\r\n\r\n  const onSubmit = useCallback(\r\n    (e: React.MouseEvent<HTMLButtonElement>) => {\r\n      if (!missmatchError && nickname) {\r\n        console.log('회원가입 시도');\r\n        setSignUpError('');\r\n        setSignUpSuccess(false);\r\n        // localhost 3090(프론트)가 3095(백엔드)로 보내는 요청\r\n        axios\r\n          .post('/api/users', {\r\n            email,\r\n            nickname,\r\n            password,\r\n          })\r\n          .then(() => {\r\n            setSignUpSuccess(true);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error.response);\r\n            setSignUpError(error.response.data);\r\n          })\r\n          .finally(() => {});\r\n      }\r\n    },\r\n    [email, nickname, password, passwordCheck, missmatchError],\r\n  );\r\n\r\n  if (data) return <Navigate to=\"/workspace/sleact/channel/일반\" />;\r\n\r\n  return (\r\n    <div className=\"max-w-[400px] mx-auto px-[20px]\">\r\n      <h1 className=\"flex flex-col items-center justify-center pt-[60px] pb-[20px]\">\r\n        <LogoChat color=\"#444791\" />\r\n        <span className=\"mt-[10px] text-primary text-[20px] font-bold\">ReChat</span>\r\n        <span className=\"blind\">Slack</span>\r\n      </h1>\r\n      <TextField label=\"이메일 주소\" type=\"email\" value={email} onChange={onChangeEmail} />\r\n      <TextField label=\"닉네임\" value={nickname} onChange={onChangeNickname} />\r\n      <TextField label=\"비밀번호\" type=\"password\" value={password} onChange={onChangePassword} />\r\n      <TextField label=\"비밀번호 확인\" type=\"password\" value={passwordCheck} onChange={onChangePasswordCheck} />\r\n      {missmatchError && <p className=\"mb-[20px] mt-[-10px] text-red-500 font-normal\">비밀번호가 일치하지 않습니다.</p>}\r\n      {signUpError && <p className=\"mb-[20px] mt-[-10px] text-red-500 font-normal\">{signUpError}</p>}\r\n      {signUpSuccess && <p className=\"mb-[20px] mt-[-10px] text-blue-500 font-normal\">회원가입 완료!</p>}\r\n      <Button text=\"회원가입\" onClick={onSubmit} />\r\n      <p className=\"mt-[10px] text-center\">\r\n        이미 계정이 있으신가요?\r\n        <Link to=\"/login\" className=\"ml-[4px] text-blue-600\">\r\n          로그인\r\n        </Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sign;\r\n"],"names":["_useSWR","useSWR","fetcher","data","_useInput2","error","mutate","_slicedToArray","useInput","email","onChangeEmail","_useInput4","nickname","onChangeNickname","_useInput6","password","setPassword","_useInput8","passwordCheck","setPasswordCheck","_useInput10","missmatchError","setMissmatchError","_useState2","useState","signUpError","setSignUpError","_useState4","signUpSuccess","setSignUpSuccess","onChangePassword","useCallback","e","target","value","onChangePasswordCheck","onSubmit","console","log","axios","then","catch","response","finally","React","Navigate","to","className","LogoChat","color","TextField","label","type","onChange","Button","text","onClick","Link"],"sourceRoot":""}